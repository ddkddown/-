一般字符串保存都是顺序保存，如char数组和string数组。当遇到拷贝赋值时，又会多创造一份拷贝，在内存中会出现冗余。
如：
string a = "12345";
string b = a;
这时 a，b都自己保存了一份"12345"字符串信息，这就是内存冗余；

一种解决方法是:
typedef struct _str {
  char *ptr;
  int len;
} str;

str a.ptr = "12345";
a.len = 5;

str b.ptr = a.ptr;
b.len = a.len;

这样str结构体中只存储字符串的首地址和字符串长度，大大减少了多次字符串拷贝中造成的内存里信息冗余的情况。但是缺点在于若a变量对数据进行了修改会影响到b变量，在一些情况下就会出现问题。
